mutate(Locality = case_when(
Locality %in% names(locality_to_postcode) ~ locality_to_postcode[Locality],
TRUE ~ Locality  # Keep original if not in mapping
)) %>%
mutate(Locality = as.factor(Locality))
str(target_db)
glimpse(target_db)
library(randomForest)
library(caret)
colSums(is.na(target_db))
set.seed(123)  # For reproducibility
trainIndex <- createDataPartition(target_db$Donor_Status, p = .75,
list = FALSE,
times = 1)
trainingData <- target_db[trainIndex,]
testingData  <- target_db[-trainIndex,]
rf_model <- randomForest(Donor_Status ~ ., data = trainingData, ntree = 500, mtry = 3, importance = TRUE)
# Ensure 'Donor No.' is removed
trainingData <- trainingData %>% select(-`Donor No.`)
testingData <- testingData %>% select(-`Donor No.`)
rf_model <- randomForest(Donor_Status ~ ., data = trainingData, ntree = 500, mtry = 3, importance = TRUE)
# Ensure 'Donor No.' is removed
trainingData <- trainingData %>% select(-`Donor No.`, -`Date of Birth`)
set.seed(123)  # For reproducibility
trainIndex <- createDataPartition(target_db$Donor_Status, p = .75,
list = FALSE,
times = 1)
trainingData <- target_db[trainIndex,]
testingData  <- target_db[-trainIndex,]
# Ensure 'Donor No.' is removed
trainingData <- trainingData %>% select(-`Donor No.`, -`Date of Birth`)
testingData <- testingData %>% select(-`Donor No.`, -`Date of Birth`)
rf_model <- randomForest(Donor_Status ~ ., data = trainingData, ntree = 500, mtry = 3, importance = TRUE)
##installing and loading basic packages
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(cluster)
##uploading xls file
ur_db <- read_excel("C:/Users/vella/Documents/Datasets/AWB Project/DaveList2022_Complete.xlsx")
glimpse(ur_db)
#factorising vars
ur_db <- ur_db %>% mutate(
Sex = as.factor(Sex),
Locality = as.factor(Locality),
Venue = as.factor(Venue),
`1st Timer` = as.factor(`1st Timer`),
`Deferred Donor` = as.factor(`Deferred Donor`),
`Deferral Reason` = as.factor(`Deferral Reason`),
)
glimpse(ur_db)
#recode localities
locality_to_postcode <- c(
"ATTARD - MALTA" = "ATD",
"BALZAN - MALTA" = "BZN",
"BIRGU - MALTA" = "BRG",
"BIRKIRKARA - MALTA" = "BKR",
"BIRZEBBUGA - MALTA" = "BBG",
"BORMLA - MALTA" = "BML",
"DINGLI - MALTA" = "DGL",
"FGURA - MALTA" = "FGR",
"FLORIANA - MALTA" = "FLR",
"FONTANA - GOZO" = "FNT",
"GHAJNSIELEM - GOZO" = "GSM",
"GHARB - GOZO" = "GRB",
"GHARGHUR - MALTA" = "GHR",
"GHASRI - GOZO" = "GSR",
"GHAXAQ - MALTA" = "GXQ",
"GUDJA - MALTA" = "GDJ",
"GZIRA - MALTA" = "GZR",
"HAMRUN - MALTA" = "HMR",
"IKLIN - MALTA" = "IKL",
"ISLA - MALTA" = "ISL",
"KALKARA - MALTA" = "KKR",
"KERCEM - GOZO" = "KCM",
"KIRKOP - MALTA" = "KKP",
"LIJA - MALTA" = "LJA",
"LUQA - MALTA" = "LQA",
"MARSA - MALTA" = "MRS",
"MARSALFORN - GOZO" = "MFN",
"MARSASKALA - MALTA" = "MSK",
"MARSAXLOKK - MALTA" = "MXK",
"MDINA - MALTA" = "MDN",
"MELLIEHA - MALTA" = "MLH",
"MGARR - MALTA" = "MGR",
"MOSTA - MALTA" = "MST",
"MQABBA - MALTA" = "MQB",
"MSIDA - MALTA" = "MSD",
"MTARFA - MALTA" = "MTF",
"MUNXAR - GOZO" = "MXR",
"NADUR - GOZO" = "NDR",
"NAXXAR - MALTA" = "NXR",
"PAOLA - MALTA" = "PLA",
"PEMBROKE - MALTA" = "PBK",
"PIETA' - MALTA" = "PTA",
"QALA - GOZO" = "QLA",
"QORMI - MALTA" = "QRM",
"QRENDI - MALTA" = "QRD",
"RABAT - GOZO" = "VCT",
"RABAT - MALTA" = "RBT",
"SAFI - MALTA" = "SFI",
"SAN GILJAN - MALTA" = "STJ",
"SAN GWANN - MALTA" = "SGN",
"SAN LAWRENZ - GOZO" = "SLZ",
"SAN PAWL IL-BAHAR - MALTA" = "SPB",
"SANNAT - GOZO" = "SNT",
"SANTA LUCIJA - MALTA" = "SLC",
"SANTA VENERA - MALTA" = "SVR",
"SIGGIEWI - MALTA" = "SGW",
"SLIEMA - MALTA" = "SLM",
"SWIEQI - MALTA" = "SWQ",
"TA' XBIEX - MALTA" = "XBX",
"TARXIEN - MALTA" = "TXN",
"VALLETTA - MALTA" = "VLT",
"XAGHRA - GOZO" = "XRA",
"XEWKIJA - GOZO" = "XWK",
"XGHAJRA - MALTA" = "XJR",
"XLENDI - GOZO" = "XLN",
"ZABBAR - MALTA" = "ZBR",
"ZEBBUG - GOZO" = "ZBB",
"ZEBBUG - MALTA" = "ZBG",
"ZEJTUN - MALTA" = "ZJT",
"ZURRIEQ - MALTA" = "ZRQ"
)
current_date <- Sys.Date()
target_db <- ur_db %>% mutate(
Donor_Status = case_when(
difftime(current_date, `Last Visit`, units = "days") > 365 ~ "Donor Lost",
`1st Timer` == "First Timer" & difftime(current_date, `Last Visit`, units = "days") <365 ~ "Donor Retained",
`1st Timer` == "Regular" & `Donation Frequency` <= 6 & difftime(current_date, `Last Visit`, units = "days") <365 ~ "Donor Retained",
TRUE ~ "Donor Lost"
)
)
target_db <- target_db %>% mutate(Donor_Status =
as.factor(Donor_Status)
)
target_db <- target_db %>%
mutate(Locality = case_when(
Locality %in% names(locality_to_postcode) ~ locality_to_postcode[Locality],
TRUE ~ Locality  # Keep original if not in mapping
)) %>%
mutate(Locality = as.factor(Locality))
glimpse(target_db)
str(target_db)
View(target_db)
colSums(is.na(target_db))
library(randomForest)
library(caret)
library(dplyr)
# Convert necessary columns and handle dates
target_db <- target_db %>%
mutate(
Age = as.numeric(Age),
`Donation Frequency` = as.numeric(`Donation Frequency`),
`Total Donation Attempts.` = as.numeric(`Total Donation Attempts.`),
First_Visit_Year = as.numeric(format(`First Visit`, "%Y")),
First_Visit_Month = as.numeric(format(`First Visit`, "%m")),
Last_Visit_Year = as.numeric(format(`Last Visit`, "%Y")),
Last_Visit_Month = as.numeric(format(`Last Visit`, "%m")),
Days_Since_First_Visit = as.numeric(difftime(Sys.Date(), `First Visit`, units = "days")),
Days_Since_Last_Visit = as.numeric(difftime(Sys.Date(), `Last Visit`, units = "days"))
) %>%
select(-`Donor No.`, -`First Visit`, -`Last Visit`, -`Date of Birth`) %>%
mutate(across(where(is.factor), as.factor))  # Ensure all factors are properly formatted
testingData  <- target_db[-trainIndex,]
trainIndex <- createDataPartition(target_db$Donor_Status, p = .75, list = FALSE, times = 1)
trainingData <- target_db[trainIndex,]
testingData  <- target_db[-trainIndex,]
rf_model <- randomForest(Donor_Status ~ ., data = trainingData, ntree = 500, mtry = 3, importance = TRUE)
##installing and loading basic packages
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(cluster)
##uploading xls file
ur_db <- read_excel("C:/Users/vella/Documents/Datasets/AWB Project/DaveList2022_Complete.xlsx")
glimpse(ur_db)
#factorising vars
ur_db <- ur_db %>% mutate(
Sex = as.factor(Sex),
Locality = as.factor(Locality),
Venue = as.factor(Venue),
`1st Timer` = as.factor(`1st Timer`),
`Deferred Donor` = as.factor(`Deferred Donor`),
`Deferral Reason` = as.factor(`Deferral Reason`),
)
glimpse(ur_db)
#recode localities
locality_to_postcode <- c(
"ATTARD - MALTA" = "ATD",
"BALZAN - MALTA" = "BZN",
"BIRGU - MALTA" = "BRG",
"BIRKIRKARA - MALTA" = "BKR",
"BIRZEBBUGA - MALTA" = "BBG",
"BORMLA - MALTA" = "BML",
"DINGLI - MALTA" = "DGL",
"FGURA - MALTA" = "FGR",
"FLORIANA - MALTA" = "FLR",
"FONTANA - GOZO" = "FNT",
"GHAJNSIELEM - GOZO" = "GSM",
"GHARB - GOZO" = "GRB",
"GHARGHUR - MALTA" = "GHR",
"GHASRI - GOZO" = "GSR",
"GHAXAQ - MALTA" = "GXQ",
"GUDJA - MALTA" = "GDJ",
"GZIRA - MALTA" = "GZR",
"HAMRUN - MALTA" = "HMR",
"IKLIN - MALTA" = "IKL",
"ISLA - MALTA" = "ISL",
"KALKARA - MALTA" = "KKR",
"KERCEM - GOZO" = "KCM",
"KIRKOP - MALTA" = "KKP",
"LIJA - MALTA" = "LJA",
"LUQA - MALTA" = "LQA",
"MARSA - MALTA" = "MRS",
"MARSALFORN - GOZO" = "MFN",
"MARSASKALA - MALTA" = "MSK",
"MARSAXLOKK - MALTA" = "MXK",
"MDINA - MALTA" = "MDN",
"MELLIEHA - MALTA" = "MLH",
"MGARR - MALTA" = "MGR",
"MOSTA - MALTA" = "MST",
"MQABBA - MALTA" = "MQB",
"MSIDA - MALTA" = "MSD",
"MTARFA - MALTA" = "MTF",
"MUNXAR - GOZO" = "MXR",
"NADUR - GOZO" = "NDR",
"NAXXAR - MALTA" = "NXR",
"PAOLA - MALTA" = "PLA",
"PEMBROKE - MALTA" = "PBK",
"PIETA' - MALTA" = "PTA",
"QALA - GOZO" = "QLA",
"QORMI - MALTA" = "QRM",
"QRENDI - MALTA" = "QRD",
"RABAT - GOZO" = "VCT",
"RABAT - MALTA" = "RBT",
"SAFI - MALTA" = "SFI",
"SAN GILJAN - MALTA" = "STJ",
"SAN GWANN - MALTA" = "SGN",
"SAN LAWRENZ - GOZO" = "SLZ",
"SAN PAWL IL-BAHAR - MALTA" = "SPB",
"SANNAT - GOZO" = "SNT",
"SANTA LUCIJA - MALTA" = "SLC",
"SANTA VENERA - MALTA" = "SVR",
"SIGGIEWI - MALTA" = "SGW",
"SLIEMA - MALTA" = "SLM",
"SWIEQI - MALTA" = "SWQ",
"TA' XBIEX - MALTA" = "XBX",
"TARXIEN - MALTA" = "TXN",
"VALLETTA - MALTA" = "VLT",
"XAGHRA - GOZO" = "XRA",
"XEWKIJA - GOZO" = "XWK",
"XGHAJRA - MALTA" = "XJR",
"XLENDI - GOZO" = "XLN",
"ZABBAR - MALTA" = "ZBR",
"ZEBBUG - GOZO" = "ZBB",
"ZEBBUG - MALTA" = "ZBG",
"ZEJTUN - MALTA" = "ZJT",
"ZURRIEQ - MALTA" = "ZRQ"
)
current_date <- Sys.Date()
target_db <- ur_db %>% mutate(
Donor_Status = case_when(
difftime(current_date, `Last Visit`, units = "days") > 365 ~ "Donor Lost",
`1st Timer` == "First Timer" & difftime(current_date, `Last Visit`, units = "days") <365 ~ "Donor Retained",
`1st Timer` == "Regular" & `Donation Frequency` <= 6 & difftime(current_date, `Last Visit`, units = "days") <365 ~ "Donor Retained",
TRUE ~ "Donor Lost"
)
)
target_db <- target_db %>% mutate(Donor_Status =
as.factor(Donor_Status)
)
target_db <- target_db %>%
mutate(Locality = case_when(
Locality %in% names(locality_to_postcode) ~ locality_to_postcode[Locality],
TRUE ~ Locality  # Keep original if not in mapping
)) %>%
mutate(Locality = as.factor(Locality))
str(target_db)
glimpse(target_db)
library(randomForest)
library(caret)
# Check column names and structure again
print(colnames(target_db))
print(str(target_db))
# Data preparation
target_db <- target_db %>%
mutate(
Age = as.numeric(Age),
`Donation Frequency` = as.numeric(`Donation Frequency`),
`Total Donation Attempts.` = as.numeric(`Total Donation Attempts.`),
First_Visit_Year = as.numeric(format(`First Visit`, "%Y")),
First_Visit_Month = as.numeric(format(`First Visit`, "%m")),
Last_Visit_Year = as.numeric(format(`Last Visit`, "%Y")),
Last_Visit_Month = as.numeric(format(`Last Visit`, "%m")),
Days_Since_First_Visit = as.numeric(difftime(Sys.Date(), `First Visit`, units = "days")),
Days_Since_Last_Visit = as.numeric(difftime(Sys.Date(), `Last Visit`, units = "days"))
) %>%
select(-`Donor No.`, -`First Visit`, -`Last Visit`, -`Date of Birth`) %>%
mutate(across(where(is.factor), as.factor))
# Verify again
print(head(target_db))
print(colnames(target_db))
print(str(target_db))
trainIndex <- createDataPartition(target_db$Donor_Status, p = .75, list = FALSE, times = 1)
trainingData <- target_db[trainIndex,]
testingData  <- target_db[-trainIndex,]
# Train the Random Forest Model
set.seed(123)
rf_model <- randomForest(Donor_Status ~ ., data = trainingData, ntree = 500, mtry = 3, importance = TRUE)
# Final check
print(colnames(trainingData))
print(str(trainingData))
print(colnames(testingData))
print(str(testingData))
# Final check
print(colnames(trainingData))
print(str(trainingData))
# Data preparation
target_db <- target_db %>%
mutate(
Age = as.numeric(Age),
Donation Frequency = as.numeric(Donation Frequency),
# Data preparation
target_db <- target_db %>%
mutate(
Age = as.numeric(Age),
Donation Frequency = as.numeric(`Donation Frequency`),
# Data preparation
target_db <- target_db %>%
mutate(
Age = as.numeric(Age),
`Donation Frequency` = as.numeric(`Donation Frequency`),
`Total Donation Attempts.` = as.numeric(`Total Donation Attempts.`),
First_Visit_Year = as.numeric(format(`First Visit`, "%Y")),
First_Visit_Month = as.numeric(format(`First Visit`, "%m")),
Last_Visit_Year = as.numeric(format(`Last Visit`, "%Y")),
Last_Visit_Month = as.numeric(format(`Last Visit`, "%m")),
Days_Since_First_Visit = as.numeric(difftime(Sys.Date(), `First Visit`, units = "days")),
Days_Since_Last_Visit = as.numeric(difftime(Sys.Date(), `Last Visit`, units = "days"))
) %>%
select(-`Donor No.`, -`First Visit`, -`Last Visit`, -`Date of Birth`) %>%
mutate(across(where(is.factor), as.factor))
##installing and loading basic packages
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(cluster)
##uploading xls file
ur_db <- read_excel("C:/Users/vella/Documents/Datasets/AWB Project/DaveList2022_Complete.xlsx")
glimpse(ur_db)
#factorising vars
ur_db <- ur_db %>% mutate(
Sex = as.factor(Sex),
Locality = as.factor(Locality),
Venue = as.factor(Venue),
`1st Timer` = as.factor(`1st Timer`),
`Deferred Donor` = as.factor(`Deferred Donor`),
`Deferral Reason` = as.factor(`Deferral Reason`),
)
glimpse(ur_db)
#recode localities
locality_to_postcode <- c(
"ATTARD - MALTA" = "ATD",
"BALZAN - MALTA" = "BZN",
"BIRGU - MALTA" = "BRG",
"BIRKIRKARA - MALTA" = "BKR",
"BIRZEBBUGA - MALTA" = "BBG",
"BORMLA - MALTA" = "BML",
"DINGLI - MALTA" = "DGL",
"FGURA - MALTA" = "FGR",
"FLORIANA - MALTA" = "FLR",
"FONTANA - GOZO" = "FNT",
"GHAJNSIELEM - GOZO" = "GSM",
"GHARB - GOZO" = "GRB",
"GHARGHUR - MALTA" = "GHR",
"GHASRI - GOZO" = "GSR",
"GHAXAQ - MALTA" = "GXQ",
"GUDJA - MALTA" = "GDJ",
"GZIRA - MALTA" = "GZR",
"HAMRUN - MALTA" = "HMR",
"IKLIN - MALTA" = "IKL",
"ISLA - MALTA" = "ISL",
"KALKARA - MALTA" = "KKR",
"KERCEM - GOZO" = "KCM",
"KIRKOP - MALTA" = "KKP",
"LIJA - MALTA" = "LJA",
"LUQA - MALTA" = "LQA",
"MARSA - MALTA" = "MRS",
"MARSALFORN - GOZO" = "MFN",
"MARSASKALA - MALTA" = "MSK",
"MARSAXLOKK - MALTA" = "MXK",
"MDINA - MALTA" = "MDN",
"MELLIEHA - MALTA" = "MLH",
"MGARR - MALTA" = "MGR",
"MOSTA - MALTA" = "MST",
"MQABBA - MALTA" = "MQB",
"MSIDA - MALTA" = "MSD",
"MTARFA - MALTA" = "MTF",
"MUNXAR - GOZO" = "MXR",
"NADUR - GOZO" = "NDR",
"NAXXAR - MALTA" = "NXR",
"PAOLA - MALTA" = "PLA",
"PEMBROKE - MALTA" = "PBK",
"PIETA' - MALTA" = "PTA",
"QALA - GOZO" = "QLA",
"QORMI - MALTA" = "QRM",
"QRENDI - MALTA" = "QRD",
"RABAT - GOZO" = "VCT",
"RABAT - MALTA" = "RBT",
"SAFI - MALTA" = "SFI",
"SAN GILJAN - MALTA" = "STJ",
"SAN GWANN - MALTA" = "SGN",
"SAN LAWRENZ - GOZO" = "SLZ",
"SAN PAWL IL-BAHAR - MALTA" = "SPB",
"SANNAT - GOZO" = "SNT",
"SANTA LUCIJA - MALTA" = "SLC",
"SANTA VENERA - MALTA" = "SVR",
"SIGGIEWI - MALTA" = "SGW",
"SLIEMA - MALTA" = "SLM",
"SWIEQI - MALTA" = "SWQ",
"TA' XBIEX - MALTA" = "XBX",
"TARXIEN - MALTA" = "TXN",
"VALLETTA - MALTA" = "VLT",
"XAGHRA - GOZO" = "XRA",
"XEWKIJA - GOZO" = "XWK",
"XGHAJRA - MALTA" = "XJR",
"XLENDI - GOZO" = "XLN",
"ZABBAR - MALTA" = "ZBR",
"ZEBBUG - GOZO" = "ZBB",
"ZEBBUG - MALTA" = "ZBG",
"ZEJTUN - MALTA" = "ZJT",
"ZURRIEQ - MALTA" = "ZRQ"
)
current_date <- Sys.Date()
target_db <- ur_db %>% mutate(
Donor_Status = case_when(
difftime(current_date, `Last Visit`, units = "days") > 365 ~ "Donor Lost",
`1st Timer` == "First Timer" & difftime(current_date, `Last Visit`, units = "days") <365 ~ "Donor Retained",
`1st Timer` == "Regular" & `Donation Frequency` <= 6 & difftime(current_date, `Last Visit`, units = "days") <365 ~ "Donor Retained",
TRUE ~ "Donor Lost"
)
)
target_db <- target_db %>% mutate(Donor_Status =
as.factor(Donor_Status)
)
target_db <- target_db %>%
mutate(Locality = case_when(
Locality %in% names(locality_to_postcode) ~ locality_to_postcode[Locality],
TRUE ~ Locality  # Keep original if not in mapping
)) %>%
mutate(Locality = as.factor(Locality))
str(target_db)
glimpse(target_db)
View(target_db)
View(target_db)
library(randomForest)
library(caret)
# Check column names and structure again
print(colnames(target_db))
print(str(target_db))
# Data preparation
target_db <- target_db %>%
mutate(
Age = as.numeric(Age),
`Donation Frequency` = as.numeric(`Donation Frequency`),
`Total Donation Attempts.` = as.numeric(`Total Donation Attempts.`),
First_Visit_Year = as.numeric(format(`First Visit`, "%Y")),
First_Visit_Month = as.numeric(format(`First Visit`, "%m")),
Last_Visit_Year = as.numeric(format(`Last Visit`, "%Y")),
Last_Visit_Month = as.numeric(format(`Last Visit`, "%m")),
Days_Since_First_Visit = as.numeric(difftime(Sys.Date(), `First Visit`, units = "days")),
Days_Since_Last_Visit = as.numeric(difftime(Sys.Date(), `Last Visit`, units = "days"))
) %>%
select(-`Donor No.`, -`First Visit`, -`Last Visit`, -`Date of Birth`) %>%
mutate(across(where(is.factor), as.factor))
# Verify again
print(head(target_db))
print(colnames(target_db))
# Data preparation
target_db <- target_db %>%
mutate(
Age = as.numeric(Age),
`Donation Frequency` = as.factor(`Donation Frequency`),
`Total Donation Attempts.` = as.numeric(`Total Donation Attempts.`),
First_Visit_Year = as.numeric(format(`First Visit`, "%Y")),
First_Visit_Month = as.numeric(format(`First Visit`, "%m")),
Last_Visit_Year = as.numeric(format(`Last Visit`, "%Y")),
Last_Visit_Month = as.numeric(format(`Last Visit`, "%m")),
Days_Since_First_Visit = as.numeric(difftime(Sys.Date(), `First Visit`, units = "days")),
Days_Since_Last_Visit = as.numeric(difftime(Sys.Date(), `Last Visit`, units = "days"))
) %>%
select(-`Donor No.`, -`First Visit`, -`Last Visit`, -`Date of Birth`) %>%
mutate(across(where(is.factor), as.factor))
# Data preparation
target_db <- target_db %>%
mutate(
Age = as.numeric(Age),
`Donation Frequency` = as.numeric(`Donation Frequency`),
`Total Donation Attempts.` = as.numeric(`Total Donation Attempts.`),
First_Visit_Year = as.numeric(format(`First Visit`, "%Y")),
First_Visit_Month = as.numeric(format(`First Visit`, "%m")),
Last_Visit_Year = as.numeric(format(`Last Visit`, "%Y")),
Last_Visit_Month = as.numeric(format(`Last Visit`, "%m")),
Days_Since_First_Visit = as.numeric(difftime(Sys.Date(), `First Visit`, units = "days")),
Days_Since_Last_Visit = as.numeric(difftime(Sys.Date(), `Last Visit`, units = "days"))
) %>%
select(-`Donor No.`, -`First Visit`, -`Last Visit`, -`Date of Birth`) %>%
mutate(across(where(is.factor), as.factor))
